@using MODAMS.Utility
@using System.Globalization
@using Microsoft.AspNetCore.Mvc.Localization
@model MODAMS.Models.ViewModels.Dto.AssetInfoDTO
@inject IViewLocalizer Localizer
@inject MODAMS.Utility.IAMSFunc _func


<link href="~/css/assetinfo.css" rel="stylesheet" />
<div class="page-header">
    <div>
        <h1 class="page-title">@Localizer["AssetReport"]</h1>
    </div>
    <div class="ms-auto pageheader-btn">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Home" asp-action="Index">@Localizer["Dashboard"]</a></li>
            @{
                int categoryId = Convert.ToInt32(TempData["categoryId"]);

                if (categoryId > 0)
                {
                    <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Assets" asp-action="AssetList" asp-route-id="@categoryId">@Localizer["AssetList"]</a></li>
                }
                else
                {
                    <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Stores" asp-action="Index">@Localizer["Stores"]</a></li>
                    <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Stores" asp-action="StoreDetails" asp-route-id="@TempData["storeId"]">@TempData["storeName"]</a></li>
                    <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Assets" asp-action="Index" asp-route-id="@TempData["storeId"]">@Localizer["Assets"]</a></li>
                }
            }
            <li class="breadcrumb-item active" aria-current="page">@Localizer["Asset Report"]</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        <div class="card overflow-hidden">
            <div class="card-footer p-0">
                <!-- Tabs -->
                <div class="tabs-menu4 py-5 project-menu">
                    <nav class="nav border-bottom px-4 d-block d-lg-flex flex-2">
                        <a id="a_tab_1" class="nav-link border py-1 mb-2 mb-lg-0 br-lg-5 mx-1 mx-md-1 active" data-bs-toggle="tab" href="#tab_1">
                            @Localizer["Overview"]
                        </a>
                        <a id="a_tab_2" class="nav-link border py-1 mb-2 mb-lg-0 br-lg-5 mx-1 mx-md-1" data-bs-toggle="tab" href="#tab_2">
                            @Localizer["Documents"]
                        </a>
                        <a id="a_tab_3" class="nav-link border py-1 mb-2 mb-lg-0 br-lg-5 mx-1 mx-md-1" data-bs-toggle="tab" href="#tab_3">
                            @Localizer["Pictures"]
                        </a>
                    </nav>
                </div>
                <!-- /Tabs -->
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="tab-content">
            <div class="tab-pane active" id="tab_1">
                <!-- ROW -->
                @{
                    bool isSomali = CultureInfo.CurrentCulture.Name == "so" ? true : false;
                    var sCategoryName = isSomali ? Model.Asset.SubCategory.SubCategoryNameSo : Model.Asset.SubCategory.SubCategoryName;
                }
                <div class="row">
                    <div class="col-md-9">
                        <div id="dvMainContainer">
                            <div class="card">
                                <div class="card-header border-bottom d-block divShadow bg-info-gradient text-white">
                                    <h3 class="card-title text-bold">
                                        @(sCategoryName)
                                        @{
                                            var employeeId = await _func.GetEmployeeIdAsync();

                                            employeeId = (User.IsInRole("User")) ? await _func.GetSupervisorIdAsync(employeeId) : employeeId;
                                            if (employeeId == await _func.GetStoreOwnerIdAsync(await _func.GetStoreIdByAssetIdAsync(Model.Asset.Id)))
                                            {
                                                <a asp-action="EditAsset" asp-controller="Assets" asp-route-id="@Model.Asset.Id" class="ms-1" id="checkElement"><i class="fe fe-edit"></i></a>
                                            }
                                            <span class="float-end">@TempData["StoreName"]</span>
                                        }
                                    </h3>
                                </div>
                                @{
                                    string sBackground = "";

                                    switch (Model.Asset.AssetStatusId)
                                    {
                                        case SD.Asset_Available:
                                            sBackground = "primary";
                                            break;
                                        case SD.Asset_Disposed:
                                            sBackground = "secondary";
                                            break;
                                        case SD.Asset_HandedOver:
                                            sBackground = "info";
                                            break;
                                    }
                                }
                                <div class="card-body p-0">
                                    <div class="border-top"></div>
                                    <div class="grid-container">
                                        <div class="grid-item"><strong>@Localizer["Make"] :</strong> @Model.Asset.Make</div>
                                        <div class="grid-item"><strong>@Localizer["Model"] :</strong> @Model.Asset.Model</div>
                                        <div class="grid-item"><strong>@Localizer["Year"] :</strong> @Model.Asset.Year</div>

                                        <div class="grid-item"><strong>@Localizer["Category"] :</strong> @sCategoryName</div>
                                        <div class="grid-item"><strong>@Localizer["AssetName"] :</strong> @Model.Asset.Name</div>
                                        <div class="grid-item"><strong>@Localizer["ManufacturingCountry"] :</strong> @Model.Asset.ManufacturingCountry</div>

                                        <div class="grid-item"><strong>@Localizer["SerialNumber"] :</strong> @Model.Asset.SerialNo</div>
                                        <div class="grid-item"><strong>@Localizer["Barcode"] :</strong> @Model.Asset.Barcode</div>
                                        <div class="grid-item"><strong>@Localizer["PONumber"] :</strong> @Model.Asset.PONumber</div>

                                        <div class="grid-item"><strong>@Localizer["PurchaseDate"] :</strong> @Model.Asset.PurchaseDate?.ToString("MMMM dd, yyyy")</div>
                                        <div class="grid-item"><strong>@Localizer["ReceiptDate"] :</strong> @Model.Asset.RecieptDate?.ToString("MMMM dd, yyyy")</div>
                                        <div class="grid-item"><strong>@Localizer["ProcuredBy"]: </strong> @Model.Asset.ProcuredBy</div>

                                        <div class="grid-item"><strong>@Localizer["Condition"] : </strong> @Model.Asset.Condition.ConditionName</div>
                                        <div class="grid-item"><strong>@Localizer["Donor"] :</strong> @Model.Asset.Donor.Name</div>
                                        <div class="grid-item">
                                            <strong>@Localizer["Status"] : </strong>
                                            <span class="text-primary">
                                                <span class="mb-0 mt-1 badge rounded-pill bg-@sBackground-transparent text-@sBackground">
                                                    @(isSomali? Model.Asset.AssetStatus.StatusNameSo : Model.Asset.AssetStatus.StatusName)
                                                </span>
                                            </span>
                                        </div>

                                        <div class="grid-item full-width"><strong>@Localizer["Specifications"] : </strong> @Model.Asset.Specifications</div>

                                        @if (Model.Asset.SubCategory.Category.Id == 16)
                                        {
                                            <div class="grid-item"><strong>@Localizer["EngineNumber"]: </strong> @Model.Asset.Engine</div>
                                            <div class="grid-item"><strong>@Localizer["ChasisNumber"]:</strong> @Model.Asset.Chasis</div>
                                            <div class="grid-item"><strong>@Localizer["PlateNumber"]:</strong> @Model.Asset.Plate</div>
                                        }
                                        <div class="grid-item full-width"><strong>@Localizer["Remarks"] :</strong> @Model.Asset.Remarks</div>
                                        @{
                                            if (User.IsInRole("Administrator"))
                                            {
                                                <div class="grid-item full-width">
                                                    <button class="btn btn-outline-secondary" id="btnDeleteAsset" onclick="deleteAsset('@Model.Asset.Id')">
                                                        <i class="fa fa-trash"></i>&nbsp;@Localizer["DeleteAsset"]
                                                    </button>
                                                </div>
                                            }
                                        }
                                    </div>

                                </div>

                            </div>
                            <div class="card">
                                <div class="card-body">
                                    <div class="row prjct-details">
                                        <div class="col-xl-2 col-lg-12">
                                            <div class="text-center border py-5 br-5 details">
                                                <div>
                                                    <span class="m-0 text-muted">@Localizer["InitialCost"]:</span>
                                                </div>
                                                <h5 class="mt-3 text-teritary">@Model.Asset.Cost.ToString("N2")</h5>
                                            </div>
                                        </div>
                                        @{
                                            var cost = Model.Asset.Cost;
                                            decimal depCost = 0;
                                            decimal difference = 0;
                                            string usePercentage = "0";

                                            if (cost > 0)
                                            {
                                                depCost = await _func.GetDepreciatedCostAsync(Model.Asset.Id);
                                                difference = cost - depCost;

                                                usePercentage = ((difference * 100) / cost).ToString("N0");
                                            }

                                        }
                                        <div class="col-xl-8 col-lg-12">
                                            <div class="text-center d-f-ai-c-jc-c border py-5 br-5">
                                                <div class="wp-80">
                                                    <div class="project-percentage medium-bar medium-lg">
                                                        <div class="percentage-title mb-4">
                                                            <span class="text-muted">
                                                                <i class="fe fe-clipboard"></i>
                                                                @Localizer["AssetUsage"]
                                                            </span>
                                                            <span class="progress-main font-weight-semibold text-13 mb-1">@usePercentage% / 100%</span>
                                                        </div>

                                                        <div class="progress progress-md mb-3">
                                                            <div class="progress-bar progress-bar-striped progress-bar-animated bg-info"
                                                                 role="progressbar"
                                                                 style="width: @usePercentage%"
                                                                 area-valuenow="@usePercentage"
                                                                 aria-valuemin="0"
                                                                 aria-valuemax="100">
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-xl-2 col-lg-12">
                                            <div class="text-center border py-5 br-5 details">
                                                <div>
                                                    <span class="m-0 text-muted">@Localizer["CurrentValue"]:</span>
                                                </div>
                                                <h5 class="mt-3 text-danger">@depCost.ToString("N2")</h5>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3" id="div2">
                        <div class="card">
                            <div class="card-header border-bottom d-block divShadow bg-info-gradient text-white">
                                <h3 class="card-title text-bold">@Localizer["AssetHistory"]</h3>
                            </div>
                            <div class="card-body" id="dvHistoryCard" style="overflow-y: auto;">
                                <ul class="task-list">
                                    @{
                                        int historyCount = Model.AssetHistory.Count;
                                        if (historyCount > 0)
                                        {

                                            int nHistoryCounter = 1;
                                            foreach (var history in Model.AssetHistory)
                                            {
                                                string formattedDate = history.TimeStamp.ToString("dd-MMM-yyyy");
                                                var sHistory = isSomali ? AssetHistoryTranslator.Translate(history.Description) : history.Description;
                                                <li>
                                                    <i class="task-icon @_func.GetBGColor(nHistoryCounter)"></i>
                                                    <p class="fw-semibold">@sHistory</p>
                                                    <p class="text-muted fs-12">@formattedDate</p>
                                                </li>
                                                if (nHistoryCounter == 8 && historyCount > 8)
                                                {
                                                    <li>
                                                        <i class="task-icon bg-primary"></i>
                                                        <h6><a href="#" class="btn btn-link"> more...</a></h6>
                                                    </li>

                                                    break;
                                                }
                                                nHistoryCounter++;
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-center">No history available!</p>
                                        }
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab_2">
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-header border-bottom d-block divShadow bg-info-gradient text-white">

                                <h3 class="card-title text-bold">
                                    @Localizer["AssetDocuments"]

                                    @{
                                        if (employeeId == await _func.GetStoreOwnerIdAsync(await _func.GetStoreIdByAssetIdAsync(Model.Asset.Id)))
                                        {
                                            <a asp-action="AssetDocuments" asp-controller="Assets" asp-route-id="@Model.Asset.Id" class="ms-1" id="checkElement"><i class="fa fa-edit"></i></a>
                                        }
                                    }
                                </h3>
                            </div>
                            <div class="card-body" style="width:800px;">
                                <div class="table-responsive">
                                    <table id="tblDocuments" class="table text-nowrap mb-0 table-bordered border-top border-bottom project-list-main">
                                        <thead>
                                            <tr>
                                                <th class="bg-transparent border-bottom-0 w-5">@Localizer["SNo"]</th>
                                                <th class="bg-transparent border-bottom-0">@Localizer["DocumentName"]</th>
                                                <th class="bg-transparent border-bottom-0">@Localizer["DownloadLink"]</th>
                                            </tr>
                                        </thead>
                                        <tbody class="table-body">
                                            @{
                                                int nCounter = 0;
                                                string sCounter = "";
                                                if (Model.Documents.Count > 0)
                                                {

                                                    foreach (var doc in Model.Documents)
                                                    {
                                                        nCounter++;
                                                        sCounter = nCounter < 10 ? '0' + nCounter.ToString() : nCounter.ToString();
                                                        <tr>
                                                            <td class="text-muted text-center fs-15 fw-semibold">@sCounter.</td>
                                                            <td class="text-muted fs-15 fw-semibold">@(isSomali? doc.DocumentType.NameSo : doc.DocumentType.Name)</td>
                                                            <td class="text-muted fs-15 fw-semibold">
                                                                @{
                                                                    if (doc.Id > 0)
                                                                    {
                                                                        <a href="@doc.DocumentUrl" class="btn btn-sm btn-outline-primary border me-2">
                                                                            <i class="fe fe-download">&nbsp;@Localizer["Download"]</i>
                                                                        </a>
                                                                    }
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-pane" id="tab_3">
                <div class="row">
                    <div class="col-md-12">
                        <div class="demo-gallery card">
                            <div class="card-header border-bottom d-block divShadow bg-info-gradient text-white">
                                <h3 class="card-title text-bold">
                                    @Localizer["AssetPictureGallery"]

                                    @{
                                        if (employeeId == await _func.GetStoreOwnerIdAsync(await _func.GetStoreIdByAssetIdAsync(Model.Asset.Id)))
                                        {
                                            <a class="ms-1" asp-action="AssetPictures" asp-controller="Assets" asp-route-id="@Model.Asset.Id" id="checkElement"><i class="fa fa-edit"></i></a>
                                        }
                                    }
                                </h3>
                            </div>
                            <div class="card-body">
                                <ul id="lightgallery" class="list-unstyled row">
                                    @{
                                        if (Model.dtoAssetPictures.PaginatedPictures().Count > 0)
                                        {
                                            nCounter = 0;
                                            foreach (var pic in Model.dtoAssetPictures.PaginatedPictures())
                                            {
                                                nCounter++;
                                                <li class="col-xs-6 col-sm-4 col-md-4 col-xl-4 mb-5 border-bottom-0" data-responsive="~/assetpictures" data-src="@pic.ImageUrl" data-sub-html="">
                                                    <a href="javascript:void(0)">
                                                        <img class="img-responsive br-5 wp-100" src="@pic.ImageUrl" alt="@pic.ImageUrl">
                                                    </a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li><p class="text-center">@Localizer["NoDataAvailable"]</p></li>
                                        }

                                    }
                                </ul>
                            </div>
                        </div>
                        <!-- GALLERY DEMO CLOSED -->
                        <!-- PAGINATION OPEN -->
                        <div class="row mb-5">
                            <div class="col-md-6">
                                <div class="float-end">
                                    <ul class="pagination">
                                        @*<li class="page-item page-prev disabled">
                                        <a class="page-link" href="#" tabindex="-1">Prev</a>
                                        </li>*@
                                        @for (int i = 1; i <= Model.dtoAssetPictures.PageCount(); i++)
                                        {
                                            <li class="@(i == Model.dtoAssetPictures.CurrentPage ? "page-item active" : "page-item")">
                                                <a class="page-link" href="@Url.Action("AssetInfo", new { id = Model.Asset.Id, page = i, tab = 3 })">@i</a>
                                            </li>
                                        }
                                        @*<li class="page-item page-next">
                                        <a class="page-link" href="#">Next</a>
                                        </li>*@
                                    </ul>
                                </div>
                            </div>
                            <!-- COL-END -->
                        </div>
                        <!-- PAGINATION CLOSED -->
                    </div>
                </div>


            </div>
        </div>
        <div class="card">
            <div class="card-footer">
                @{
                    if (categoryId > 0)
                    {
                        <a asp-action="AssetList" asp-controller="Assets" asp-route-id="@categoryId" id="btnCancel" class="btn btn-outline-default"><i class="fe fe-corner-up-left"></i>&nbsp;@Localizer["Previous"]</a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-controller="Assets" asp-route-id="@Model.Asset.StoreId" id="btnCancel" class="btn btn-outline-default"><i class="fe fe-corner-up-left"></i>&nbsp;@Localizer["Previous"]</a>
                    }
                }

            </div>
        </div>

    </div>
</div>
@await Html.PartialAsync("~/Views/Shared/_Confirmation.cshtml")
