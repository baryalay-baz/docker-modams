@using Microsoft.AspNetCore.Mvc.Localization
@using System.Globalization

@model MODAMS.Models.ViewModels.Dto.StoresDTO
@inject IViewLocalizer Localizer

@{
    ViewData["TourPageKey"] = "Stores/Index";
}

<link href="~/css/stores-index.css" rel="stylesheet" />

<!-- PAGE-HEADER -->
<div class="page-header">
    <div>
        <h1 class="page-title">@Localizer["AssetStores"]</h1>
    </div>
    <div class="ms-auto pageheader-btn">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Home" asp-action="Index">@Localizer["Dashboard"]</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Localizer["Stores"]</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card ">
            <div class="card-body p-4">
                <div class="d-flex align-items-center justify-content-between">

                    <div class="col-md-3" data-tour="stores.search"><input type="text" id="txtSearchStore" class="form-control" placeholder="@Localizer["SearchForStore"]" /></div>

                    @* <div class="btn-list" data-tour="stores.assetreport">
                        <a class="btn btn-outline-info" data-bs-target="#mdl-asset-report" data-bs-toggle="modal"><i class="fe fe-printer"></i> @Localizer["AssetReports"]</a>
                    </div> *@
                </div>
            </div>
        </div>
    </div>
</div>
@{
    bool _isSomali = CultureInfo.CurrentUICulture.Name == "so";
}
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-body p-4">
                <div class="card">
                    <div id="dvCardBody" class="card-body project-list-table-container">
                        <div class="row" id="dvMainRow">
                            @{
                                if (Model.vwStores.Count > 0)
                                {
                                    bool isLabeled = false;
                                    string sStoreTypeTour = "";
                                    string sMemberList = "";

                                    foreach (var store in Model.vwStores)
                                    {
                                        sStoreTypeTour = !isLabeled ? " data-tour=stores.storetype" : "";
                                        sMemberList = !isLabeled ? " data-tour=stores.memberlist" : "";

                                        var bgType = (store.StoreType == 1) ? "bg-info" : "bg-info-transparent";
                                        <div class="col-sm-12 col-md-12 col-lg-12 col-xl-4">
                                            <div class="divShadow--xs card divBackground" style="cursor:pointer;" onclick="loadStore(@store.Id)">
                                                <div class="card-body">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="row">
                                                                <div class="col">
                                                                    <div class="d-sm-flex align-items-center">
                                                                        <div class="avatar mb-2 p-2 lh-1 mb-sm-0 avatar-md rounded-circle @bgType me-2">
                                                                            <svg xmlns="http://www.w3.org/2000/svg" class="w-icn text-white" enable-background="new 0 0 24 24" viewBox="0 0 24 24"><path d="M4.2069702,12l5.1464844-5.1464844c0.1871338-0.1937866,0.1871338-0.5009155,0-0.6947021C9.1616211,5.9602051,8.8450928,5.9547119,8.6464844,6.1465454l-5.5,5.5c-0.000061,0-0.0001221,0.000061-0.0001221,0.0001221c-0.1951904,0.1951904-0.1951294,0.5117188,0.0001221,0.7068481l5.5,5.5C8.7401123,17.9474487,8.8673706,18.0001831,9,18c0.1325684,0,0.2597046-0.0526733,0.3533936-0.1464233c0.1953125-0.1952515,0.1953125-0.5118408,0.0001221-0.7070923L4.2069702,12z M20.8534546,11.6465454l-5.5-5.5c-0.1937256-0.1871948-0.5009155-0.1871948-0.6947021,0c-0.1986084,0.1918335-0.2041016,0.5083618-0.0122681,0.7069702L19.7930298,12l-5.1465454,5.1464844c-0.09375,0.09375-0.1464233,0.2208862-0.1464233,0.3534546C14.5,17.776062,14.723877,17.999939,15,18c0.1326294,0.0001221,0.2598267-0.0525513,0.3534546-0.1464844l5.5-5.5c0.000061-0.000061,0.0001221-0.000061,0.0001831-0.0001221C21.0487671,12.1581421,21.0487061,11.8416748,20.8534546,11.6465454z"></path></svg>
                                                                        </div>
                                                                        <div class="ms-1">
                                                                            <h6 class="mb-1"> <a class="float-start text-bold" asp-area="Users" asp-controller="Stores" asp-action="StoreDetails" asp-route-id="@store.Id">@(_isSomali? store.NameSo: store.Name)</a></h6>
                                                                            <span class="text-muted pe-2 fs-11 float-start mt-1">
                                                                                <span @(sStoreTypeTour) class="@(store.StoreType == 1 ? "text-primary text-bold" : "")">
                                                                                    @(store.StoreType == 1 ? Localizer["Primary Store"] : Localizer["Secondary Store"])
                                                                                </span>
                                                                            </span>

                                                                        </div>
                                                                    </div>
                                                                </div>

                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 mt-4">
                                                            <div class="row align-items-center">
                                                                <div class="col">
                                                                    <p class="m-0 mb-2">@Localizer["Members"]</p>
                                                                    <div class="avatar-list avatar-list-stacked" @(sMemberList)>
                                                                        @{
                                                                            var storeEmps = Model.storeEmployees.Where(m => m.StoreId == store.Id).OrderByDescending(m => m.Role).ToList();
                                                                            if (storeEmps.Count > 0)
                                                                            {
                                                                                foreach (var emp in storeEmps)
                                                                                {
                                                                                    string sContent = $"{emp.Email} <br /> {emp.Role}";

                                                                                    <a data-bs-container="body"
                                                                                       data-bs-content="@Html.Raw(sContent)"
                                                                                       data-bs-html="true"
                                                                                       data-bs-placement="right"
                                                                                       data-bs-popover-color="default"
                                                                                       data-bs-toggle="popover"
                                                                                       data-bs-original-title="@emp.FullName"
                                                                                       role="button" tabindex="0" data-bs-trigger="hover">
                                                                                        <span><img src="@emp.ImageUrl" alt="profile-user" class="avatar bradius cover-image"></span>
                                                                                    </a>
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="avatar bradius bg-primary">0</span>
                                                                            }
                                                                        }
                                                                    </div>
                                                                </div>
                                                                <div class="col-auto">
                                                                    <p class="mb-0">
                                                                        <span class="text-muted d-block">@Localizer["TotalAssets"]</span>
                                                                        <span class="text-primary text-bold float-end">@store.TotalCount</span>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 mt-4">
                                                            <div class="d-f-ai-c-jc-c">
                                                                <div class="row wp-100">
                                                                    <div class="col-md-6">
                                                                        <span class="text-muted d-block float-start">@Localizer["InitialCost"]</span><br />
                                                                        <span class="text-primary text-bold float-start">@Math.Round(Convert.ToDecimal(store.TotalCost), 0).ToString("N0")</span>
                                                                    </div>
                                                                    <div class="col-md-6">
                                                                        <span class="text-muted d-block float-end">@Localizer["CurrentValue"]</span><br />
                                                                        <span class="text-primary text-bold float-end">@Math.Round(Convert.ToDecimal(store.DepCost), 0).ToString("N0")</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        isLabeled = true;
                                    }
                                }
                                else
                                {
                                    <div class="col-md-12 text-center">@Localizer["NoStoresAvailable"]</div>
                                }
                            }

                        </div>
                    </div>
                    <div class="card-footer">
                        <a asp-area="Users" asp-controller="Home" asp-action="Index" class="btn btn-outline-default"><i class="fe fe-corner-up-left"></i>&nbsp;@Localizer["Previous"]</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<partial name="_AssetReport.cshtml" model="Model.dtoReporting" />

<div id="dvStoreList" style="display:none;"></div>
<section id="dvStoresData" style="display:none;">@Json.Serialize(Model.vwStores)</section>
<section id="dvStoreEmployeesData" style="display:none;">@Json.Serialize(Model.storeEmployees)</section>
@section scripts {
    <script src="~/js/user_stores_index.js"></script>
    <script>
        const _isSomali = getCurrentLanguage() === "so" ? true : false;
        const localizer = {
                lblPrimaryStore: "@Localizer["Primary Store"]",
                lblSecondaryStore: "@Localizer["Secondary Store"]",
                lblNoStoresAvailable: "@Localizer["NoStoresAvailable"]",
                lblTotalAssets: "@Localizer["TotalAssets"]",
                lblInitialCost: "@Localizer["InitialCost"]",
                lblCurrentValue: "@Localizer["CurrentValue"]",
                lblMembers: "@Localizer["Members"]"
            };
        $(document).ready(() => {

            $("#txtSearchStore").on("input", () => {
                searchStore();
            });

            $('.select2').select2({
                dropdownParent: $("#mdl-asset-report")
            });

            $('#btnReport').on("click", () => {
                $('#frmAssetReport').submit();
            });
        });
        const loadStore = (id) => {
            window.location.href = `/Users/Stores/StoreDetails/${id}`;
        };

        const searchStore = () => {

            var sData = $("#dvStoresData").html();
            var Data = JSON.parse(sData);

            var searchKeyword = $("#txtSearchStore").val();
            var filteredData = $.grep(Data, function (item) {
                var regex = new RegExp(searchKeyword, "i");
                return regex.test(item.name);
            });

            if (filteredData.length > 0) {
                var sHtml = '';
                filteredData.forEach((e) => {
                    const bgType = e.storeType == 1 ? 'bg-primary' : 'bg-info-transparent';
                    const storeTypeText = e.storeType === 1
                        ? `<span class="text-primary text-bold">${localizer.lblPrimaryStore}</span>`
                        : localizer.lblSecondaryStore;

                    const sEmployeeHtml = getEmployeelist(e.id);

                    sHtml += `
                    <div class="col-sm-12 col-md-12 col-lg-12 col-xl-4">
                        <div class="card divShadow--xs divBackground" style="cursor:pointer;" onclick="loadStore(${e.id})">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="row">
                                            <div class="col">
                                                <div class="d-sm-flex align-items-center">
                                                    <div class="avatar mb-2 p-2 lh-1 mb-sm-0 avatar-md rounded-circle ${bgType} me-2">
                                                        <svg xmlns="http://www.w3.org/2000/svg" class="w-icn text-white" enable-background="new 0 0 24 24" viewBox="0 0 24 24"><path d="M4.2069702,12l5.1464844-5.1464844c0.1871338-0.1937866,0.1871338-0.5009155,0-0.6947021C9.1616211,5.9602051,8.8450928,5.9547119,8.6464844,6.1465454l-5.5,5.5c-0.000061,0-0.0001221,0.000061-0.0001221,0.0001221c-0.1951904,0.1951904-0.1951294,0.5117188,0.0001221,0.7068481l5.5,5.5C8.7401123,17.9474487,8.8673706,18.0001831,9,18c0.1325684,0,0.2597046-0.0526733,0.3533936-0.1464233c0.1953125-0.1952515,0.1953125-0.5118408,0.0001221-0.7070923L4.2069702,12z M20.8534546,11.6465454l-5.5-5.5c-0.1937256-0.1871948-0.5009155-0.1871948-0.6947021,0c-0.1986084,0.1918335-0.2041016,0.5083618-0.0122681,0.7069702L19.7930298,12l-5.1465454,5.1464844c-0.09375,0.09375-0.1464233,0.2208862-0.1464233,0.3534546C14.5,17.776062,14.723877,17.999939,15,18c0.1326294,0.0001221,0.2598267-0.0525513,0.3534546-0.1464844l5.5-5.5c0.000061-0.000061,0.0001221-0.000061,0.0001831-0.0001221C21.0487671,12.1581421,21.0487061,11.8416748,20.8534546,11.6465454z"></path></svg>
                                                    </div>
                                                    <div class="ms-1">
                                                        <h6 class="mb-1">
                                                        <a class="float-start text-bold" href="/Users/Stores/StoreDetails/${e.id}">${_isSomali?e.nameSo:e.name}</a></h6>
                                                        <span class="text-muted pe-2 fs-11 float-start mt-1">
                                                            ${storeTypeText}
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 mt-4">
                                        <div class="row align-items-center">
                                            <div class="col">
                                                <p class="m-0 mb-2">${localizer.lblMembers}</p>
                                                <div class="avatar-list avatar-list-stacked">
                                                ${sEmployeeHtml}
                                                </div>
                                            </div>
                                            <div class="col-auto">
                                                <p class="mb-0">
                                                    <span class="text-muted d-block">${localizer.lblTotalAssets}</span>
                                                    <span class="text-primary text-bold float-end">${e.totalCount}</span>
                                                </p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-12 mt-4">
                                        <div class="d-f-ai-c-jc-c">
                                            <div class="row wp-100">
                                                <div class="col-md-6">
                                                    <span class="text-muted d-block float-start">${localizer.lblInitialCost}</span><br />
                                                    <span class="text-primary text-bold float-start">${Math.round(e.totalCost, 2).toLocaleString()}</span>
                                                </div>
                                                <div class="col-md-6">
                                                    <span class="text-muted d-block float-end">${localizer.lblCurrentValue}</span><br />
                                                    <span class="text-primary text-bold float-end">${Math.round(e.depCost, 2).toLocaleString()}</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    `
                });

                $("#dvMainRow").html("").html(sHtml);
            } else {
                //$("#dvMainRow").html(`<div class="alert alert-warning text-center">${localizer.lblNoStoresAvailable}</div>`);
            }
        };

    </script>

    <script>
        // Initialize the popover
        var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
        var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
            return new bootstrap.Popover(popoverTriggerEl, {
                trigger: 'focus', // Close popover on blur
            });
        });
    </script>

}
