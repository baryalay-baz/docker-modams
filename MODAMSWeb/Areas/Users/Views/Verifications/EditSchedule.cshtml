@model MODAMS.Models.ViewModels.Dto.VerificationScheduleEditDTO

<style>
    input[type="date"]::-webkit-calendar-picker-indicator {
        display: none;
    }

    .center-align {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .bordered-div {
        border-left: 1px solid lightgray;
        border-top: 1px solid lightgray;
        border-right: 1px solid lightgray;
        border-bottom: 1px solid lightgray;
    }

    .bordered-div-top {
        border-top: 1px solid lightgray;
    }

    .bordered-div-left {
        border-left: 1px solid lightgray;
    }

    .bordered-div-right {
        border-right: 1px solid lightgray;
    }

    .bordered-div-bottom {
        border-bottom: 1px solid lightgray;
    }

    .text-xsmall {
        font-size: 10px;
    }

</style>
<style>
    .custom-spacing {
        display: flex;
        align-items: center;
        gap: 0; /* No gap between columns */
    }

        .custom-spacing .form-group {
            margin-bottom: 0;
        }

        .custom-spacing .col-md-7,
        .custom-spacing .col-md-4,
        .custom-spacing .col-md-1 {
            padding-left: 2px; /* Small padding */
            padding-right: 2px; /* Small padding */
        }

    .btn-add-record {
        height: 30px; /* Match height to the select elements */
        padding: 5px 10px;
    }
</style>

<div class="page-header">
    <div>
        <h1 class="page-title">Asset Verification Schedule</h1>
    </div>
    <div class="ms-auto pageheader-btn">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Home" asp-action="Index">Dashboard</a></li>
            <li class="breadcrumb-item"><a asp-area="Users" asp-controller="Verifications" asp-action="Index">Verifications</a></li>
            <li class="breadcrumb-item active" aria-current="page">Edit Schedule</li>
        </ol>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="row">
                    <div class="card divShadow">
                        <div class="card-body p-4">
                            <div class="d-flex align-items-center justify-content-between">
                                <h4 class="m-0 text-black">Edit Schedule</h4>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="card">
                                    <div class="card-status bg-primary br-tr-7 br-tl-7"></div>
                                    <div class="card-body">
                                        <form method="post" asp-action="EditSchedule" id="frmEditSchedule">
                                            <input type="hidden" id="teamMembersData" name="teamMembersData" />
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3 form-group">
                                                        <label asp-for="StoreId" class="text-black">Project</label>
                                                        <select asp-for="StoreId" class="select2 form-select" id="storeDropdown">
                                                            <option disabled selected>-Select Project-</option>
                                                            @foreach (var store in Model.Stores.DistinctBy(ps => ps.Id))
                                                            {
                                                                <option value="@store.Id" data-asset-count="@store.Assets.Count">
                                                                    @store.Name
                                                                </option>
                                                            }
                                                        </select>
                                                        <span asp-validation-for="StoreId" class="text-danger"></span>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3 form-group">
                                                        <label asp-for="VerificationType" class="text-black">Verification Type</label>
                                                        <select asp-for="VerificationType" class="form-select select2" id="verificationTypeDropdown">
                                                            <option value="Full Verification">Full Verification</option>
                                                            <option value="Custom Verification">Custom Verification</option>
                                                        </select>
                                                        <span asp-validation-for="VerificationType" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3 form-group">
                                                        <label class="text-black">Number of Assets in Store</label>
                                                        <input id="NumberOfAssets" class="form-control" type="text" value="@Model.AssetCount(Model.StoreId)" disabled />
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="mb-3 form-group">
                                                        <label asp-for="NumberOfAssetsToVerify" class="text-black">Number of Assets to Verify</label>
                                                        <input asp-for="NumberOfAssetsToVerify" id="NumberOfAssetsToVerify" class="form-control" />
                                                        <span asp-validation-for="NumberOfAssetsToVerify" class="text-danger" id="spanNumberOfAssetsToVerify"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <div class="mb-3 form-group">
                                                        <label asp-for="StartDate" class="text-black">Start Date</label>
                                                        <input asp-for="StartDate" asp-format="{0:dd-MMM-yyyy}" class="form-control picker" aria-required="true" type="text" autocomplete="off" />
                                                        <span asp-validation-for="StartDate" class="text-danger"></span>
                                                    </div>
                                                </div>
                                                <div class="col-sm-6">
                                                    <div class="mb-3 form-group">
                                                        <label asp-for="EndDate" class="text-black">Plan End Date</label>
                                                        <input asp-for="EndDate" asp-format="{0:dd-MMM-yyyy}" class="form-control picker" aria-required="true" type="text" autocomplete="off" />
                                                        <span asp-validation-for="EndDate" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="mb-3 form-group mt-2">
                                                        <label asp-for="Notes" class="text-black"></label>
                                                        <textarea asp-for="Notes" class="form-control mb-4" placeholder="Verification Notes" rows="3"></textarea>
                                                        <span asp-validation-for="Notes" class="text-danger"></span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card">
                                    <div class="card-status bg-secondary br-tr-7 br-tl-7"></div>
                                    <div class="card-body">
                                        <h5 class="text-black">Add Team Members</h5>
                                        <hr class="text-bold" />
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="table-responsive export-table">
                                                    <table id="tblMembers" class="table text-nowrap mb-0 key-buttons border-bottom project-list-main">
                                                        <tbody id="table-body">
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row custom-spacing">
                                            <hr class="customHR" />
                                            <div class="col-md-7">
                                                <div class="form-group">
                                                    <select class="form-select select2" id="dd-employees" asp-items="@Model.EmployeesList">
                                                        <option value="0" disabled selected>-Select Employee-</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <select class="form-select select2" id="dd-role">
                                                        <option value="Team Leader">Team Leader</option>
                                                        <option value="Team Member">Team Member</option>
                                                    </select>
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                <button type="button" class="btn btn-info-gradient btn-add-record btn-sm">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="flex">
                            <button type="button" id="btn-submit" class="btn btn-info-gradient"><i class="fa fa-check-circle"></i>&nbsp;Save Schedule</button>
                            <a asp-action="PreviewSchedule" asp-controller="Verifications" asp-route-id="@Model.Id" class="btn btn-primary-gradient"><i class="fe fe-eye"></i>&nbsp;Preview Schedule</a>
                            <a asp-action="Index" asp-controller="Verifications" id="btnCancel" class="btn btn-secondary-gradient"><i class="fe fe-corner-up-left"></i>&nbsp;Cancel</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div class="card-footer">
        <div class="row">

            <div class="col-sm-12">
                <a asp-action="Index" asp-controller="Verifications" id="btnCancel" class="btn btn-outline-default"><i class="fe fe-corner-up-left"></i>&nbsp;Previous</a>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.2/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
    <script>
        let sData = '';
        let currentTeamData = '';

        let selectedTeamMembers = [];
        let memberCounter = 0;

        $(document).ready(function () {
            hideMenu();

            sData = JSON.parse('@Html.Raw(Json.Serialize(Model.Employees))');
            currentTeamData = JSON.parse('@Html.Raw(Json.Serialize(Model.EditTeam))');

            loadExistingTeamMembers();
            changestoreDropdown();

            $('.select2').select2();
            $('.picker').datepicker({
                autoclose: true,
                format: 'dd-MM-yyyy',
                todayHighlight: true
            });

            $(".btn-add-record").on("click", () => {
                // Get the selected employee name and role
                let selectedEmployeeId = $("#dd-employees").val();
                let selectedEmployeeName = $("#dd-employees option:selected").text();
                let selectedRole = $("#dd-role").val();

                // Ensure both an employee and role are selected
                if (selectedEmployeeId && selectedEmployeeId !== "0" && selectedRole) {
                    // Increment the counter
                    memberCounter++;

                    // Add the selected values to the array
                    selectedTeamMembers.push({
                        id: memberCounter,
                        employeeId: selectedEmployeeId,
                        employeeName: selectedEmployeeName,
                        role: selectedRole
                    });

                    // Generate the table row HTML
                    let rowHtml = `<tr id="member-${memberCounter}">
                                            <td class="text-black bg-transparent border-bottom-0 w-2">${memberCounter}</td>
                                            <td class="text-black bg-transparent border-bottom-0 w-20">${getName(selectedEmployeeId)}</td>
                                            <td class="text-black bg-transparent border-bottom-0 w-10">${selectedRole}</td>
                                            <td class="text-black bg-transparent border-bottom-0 w-5 no-btn">
                                                <a style="cursor:pointer;" onclick="removeMember(${memberCounter});">
                                                    <i class="fa fa-times text-danger"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    `;

                    // Append the row to the table body (replace #table-body with your table body selector)
                    $("#table-body").append(rowHtml);

                    $(`#dd-employees option[value='${selectedEmployeeId}']`).remove();

                    if (selectedRole == "Team Leader") {
                        $("#dd-role option[value='Team Leader']").remove();
                    }
                }

            });
            
            $('#storeDropdown').change(function () {
                changestoreDropdown();
            });
            $('#verificationTypeDropdown').change(function () {
                changeVerificationTypeDropdown();
            });

            $("#btn-submit").on("click", () => {
                var blnCheck = true;

                // Get the value of assets to verify and convert to number
                var assetsToVerify = parseInt($('#NumberOfAssetsToVerify').val(), 10);
                var assetCount = $(storeDropdown).find('option:selected').data('asset-count');

                // Validate that the number is greater than or equal to 1
                if (isNaN(assetsToVerify) || assetsToVerify < 1 || assetsToVerify > assetCount) {
                    $("#spanNumberOfAssetsToVerify").text(`Value should be between 1 and ${assetCount}`);
                    blnCheck = false;
                } else {
                    $("#spanNumberOfAssetsToVerify").text(""); // Clear the error message if valid
                }

                // Check if validation passed and team members are selected
                if (blnCheck && selectedTeamMembers.length > 0) {
                    $("#teamMembersData").val(JSON.stringify(selectedTeamMembers));
                    $("#frmEditSchedule").submit();
                } else if (selectedTeamMembers.length === 0) {
                    notif({
                        type: "error",
                        msg: "<b>Error: </b>No Team members selected!",
                        position: "center",
                        width: 500,
                        height: 60,
                        autohide: true
                    });
                }
            });
        });
        const changeVerificationTypeDropdown = () => {
            // Get asset count from the selected project store
            var assetCount = $('#storeDropdown').find('option:selected').data('asset-count');

            // Get the selected value of the verification type dropdown
            var selectedValue = $('#verificationTypeDropdown').val();

            // Handle verification type selection
            if (selectedValue === "Custom Verification") {
                $("#NumberOfAssetsToVerify").prop("disabled", false); // Enable the textbox for custom verification
            } else {
                $("#NumberOfAssetsToVerify").val(assetCount).prop("disabled", true); // Disable and set to asset count for full verification
            }

            // Revalidate the form after dynamically updating values
            //$("form").validate().element("#NumberOfAssetsToVerify");
        }
        const changestoreDropdown = () =>{
            // Get asset count from the selected project store
            var assetCount = $('#storeDropdown').find('option:selected').data('asset-count');

            // Update NumberOfAssets textbox with the asset count
            $('#NumberOfAssets').val(assetCount);

            // Get the selected value of the verification type dropdown
            var selectedValue = $('#verificationTypeDropdown').val();
            
            // Handle verification type selection
            if (selectedValue === "Custom Verification") {
                $("#NumberOfAssetsToVerify").prop("disabled", false);
            } else {
                $("#NumberOfAssetsToVerify").val(assetCount).prop("disabled", true);
            }
        }
        const loadExistingTeamMembers = () => {
            
            //let existingTeamMembers = JSON.parse(currentTeamData);
            currentTeamData.forEach(member => {
                memberCounter++;

                // Add the existing member to the array
                selectedTeamMembers.push({
                    id: memberCounter,
                    employeeId: member.employeeId,
                    employeeName: getName(member.employeeId),
                    role: member.role
                });

                // Generate the table row HTML
                let rowHtml = `<tr id="member-${memberCounter}">
                                <td class="text-black bg-transparent border-bottom-0 w-2">${memberCounter}</td>
                                <td class="text-black bg-transparent border-bottom-0 w-20">${getName(member.employeeId)}</td>
                                <td class="text-black bg-transparent border-bottom-0 w-10">${member.role}</td>
                                <td class="text-black bg-transparent border-bottom-0 w-5 no-btn">
                                    <a style="cursor:pointer;" onclick="removeMember(${memberCounter});">
                                        <i class="fa fa-times text-danger"></i>
                                    </a>
                                </td>
                            </tr>`;

                // Append the row to the table body
                $("#table-body").append(rowHtml);

                $(`#dd-employees option[value='${member.employeeId}']`).remove();

                if (member.role == "Team Leader") {
                    $("#dd-role option[value='Team Leader']").remove();
                }
            });
        }
        const removeMember = id => {
            $(`#member-${id}`).remove();

            let removedMember = selectedTeamMembers.find(member => member.id === id);

            if (removedMember.role === "Team Leader") {
                $("#dd-role").append('<option value="Team Leader">Team Leader</option>');
            }

            if (removedMember) {
                $("#dd-employees").append(`<option value="${removedMember.employeeId}">${removedMember.employeeName}</option>`);
            }

            selectedTeamMembers = selectedTeamMembers.filter(member => member.id !== id);
            memberCounter--;
        }
        const getName = (employeeId) => {
            let label = '';
            const employees = sData;//JSON.parse(sData);

            if (!employeeId) {
                console.error('Invalid ID');
                return label;
            }

            const employee = employees.find(e => e.id == employeeId);

            if (employee) {
                label = `<span class="avatar avatar-sm rounded-circle cover-image">
                                                                <img src="${employee.imageUrl}" alt="${employee.fullName}" class="avatar avatar-sm rounded-circle">
                                                            </span>
                                                            <span class="employee-name">${employee.fullName}</span>
                                                        `;
            } else {
                console.warn('Employee not found for ID:', employeeId);
            }

            return label;
        };
    </script>
}