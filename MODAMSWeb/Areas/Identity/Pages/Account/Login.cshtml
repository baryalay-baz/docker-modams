@page
@using Microsoft.AspNetCore.Mvc.Localization

@model LoginModel
@inject IViewLocalizer Localizer
@{
    Layout = "_Layout1";
}
<style>
    .toggle {
        width: 40px; /* Set desired toggle size */
        height: 30px;
        padding: 0;
        border-radius: 5px; /* Optional: round corners */
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: transparent; /* remove any background */
    }

        .toggle::before,
        .toggle::after {
            content: none !important;
            display: none !important;
        }
    .language {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }

    .lang-label {
        font-weight: bold;
        font-size: 12px;
    }
</style>
<!-- CONTAINER OPEN -->
<div class="col col-login mx-auto text-center">
    @*<a asp-area="" asp-page="/Index" class="text-center">
    <img src="~/assets/images/brand/ams.png" class="header-brand-img" alt="">
    </a>*@
</div>
<div class="container-login100">
    <div class="wrap-login100 p-0">
        <div class="card-body">
            <span class="login100-form-title">
                <img src="~/assets/images/brand/FGS.png" class="h-8" alt="">
            </span>
            
            <div asp-validation-summary="ModelOnly" class="text-danger text-center" role="alert"></div>

            <form id="account" class="login100-form validate-form" method="post">
                <div class="wrap-input100 validate-input" data-bs-validate="Valid email is required: ex@abc.xyz">
                    <input asp-for="Input.Email" class="input100" placeholder="@Localizer["Email"]">
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="zmdi zmdi-email" aria-hidden="true"></i>
                    </span>
                </div>
                <div class="wrap-input100 validate-input" data-bs-validate="Password is required">
                    <input asp-for="Input.Password" class="input100" placeholder="@Localizer["Password"]">
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <i class="zmdi zmdi-lock" aria-hidden="true"></i>
                    </span>
                </div>
                <div class="d-flex justify-content-between align-items-center flex-wrap">
                    <!-- Remember Me Checkbox -->
                    <div class="form-check mb-0">
                        <input asp-for="Input.RememberMe" type="checkbox" class="form-check-input" id="checkbox-2">
                        <label class="form-check-label" for="checkbox-2">@Localizer["RememberMe"]</label>
                    </div>

                    <!-- Language Toggle -->
                    <div class="main-toggle-group d-flex align-items-center">
                        <div class="lang-toggle d-flex align-items-center justify-content-center"
                             data-lang="so"
                             style="width: 60px; height: 30px; border: 1px solid #ccc; border-radius: 5px; cursor: pointer;">
                            <img class="language" src="/assets/images/flags/so.svg" alt="Somali Flag"
                                 style="width: 20px; height: 18px; object-fit: cover;">
                            <span class="lang-label ms-2" style="font-weight: bold; color: #418fde;">SO</span>
                        </div>
                    </div>
                </div>
                <div class="container-login100-form-btn">
                    <button type="submit" class="login100-form-btn btn-primary">
                        @Localizer["Login"]
                    </button>
                </div>
                <div class="text-center pt-1">
                    <p class="mb-0"><a asp-area="Identity" asp-controller="Account" asp-action="ForgotPassword" class="text-primary ms-1">@Localizer["ForgotPassword"]?</a></p>
                </div>
                <div class="text-center pt-3">
                    <p class="text-dark mb-0">@Localizer["NotRegisteredYet"]?<a href="Register" class="text-primary ms-1">@Localizer["Register"]</a></p>
                </div>
            </form>
        </div>
        <div class="card-footer">
            <div class="col-md-12 col-sm-12 text-center text-darkgray">
                <span style="font-size:12px;">@Localizer["DevelopedBy"]&nbsp;|&nbsp;</span><img src="~/assets/images/brand/unops_footer_logo.png">&nbsp;
            </div>
        </div>
    </div>
</div>
<!-- CONTAINER CLOSED -->
@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        $(document).ready(function () {
            const $toggle = $('.lang-toggle');
            const $img = $toggle.find('.language');
            const $label = $toggle.find('.lang-label');

            // Set toggle based on current language
            const currentLang = getCurrentLanguage();
            if (currentLang === 'so') {
                setToggleToSomali();
            } else {
                setToggleToEnglish();
            }

            // On click, redirect to language switch action
            $toggle.on('click', function () {
                const newLang = $(this).attr('data-lang') === 'so' ? 'en' : 'so';
                const returnUrl = window.location.pathname + window.location.search;
                window.location.href = `/Users/Language/SetLanguage?culture=${newLang}&returnUrl=${encodeURIComponent(returnUrl)}`;
            });

            function setToggleToSomali() {
                $img.attr('src', '/assets/images/flags/so.svg');
                $label.text('SO');
                $label.css('color', '#418fde');
                $toggle.attr('data-lang', 'so');
            }

            function setToggleToEnglish() {
                $img.attr('src', '/assets/images/flags/us.svg');
                $label.text('EN');
                $label.css('color', '#b22234');
                $toggle.attr('data-lang', 'en');
            }
        });

        function getCurrentLanguage() {
            const cookieName = '.AspNetCore.Culture';
            const cookieValue = document.cookie.split('; ').find(row => row.startsWith(cookieName + '='));

            if (cookieValue) {
                const encodedValue = cookieValue.split('=')[1];
                const decodedValue = decodeURIComponent(encodedValue);
                const match = decodedValue.match(/c=(\w+)/);
                return match ? match[1] : 'en';
            }
            return 'en';
        }

    </script>
}




